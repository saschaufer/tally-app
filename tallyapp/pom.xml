<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>de.saschaufer</groupId>
        <artifactId>tallyapp</artifactId>
        <version>${revision}</version>
    </parent>

    <groupId>de.saschaufer.tallyapp</groupId>
    <artifactId>tallyapp</artifactId>
    <packaging>jar</packaging>

    <name>${project.groupId}:${project.artifactId}</name>

    <properties>

        <!-- Jacoco -->
        <jacoco.outdir>${project.build.directory}/coverage-report</jacoco.outdir>

        <!-- Add to plugin as well -->
        <jacoco.exclude.1>**/tally/config/**/*Config.*</jacoco.exclude.1>
        <jacoco.exclude.2>**/tally/config/**/*Properties.*</jacoco.exclude.2>
        <jacoco.exclude.3>**/tally/**/dto/**/*</jacoco.exclude.3>
        <jacoco.exclude.4>**/tally/management/UserAgent.*</jacoco.exclude.4>
        <jacoco.exclude.5>**/tally/Application.*</jacoco.exclude.5>

        <!-- SonarQube -->
        <sonar.coverage.jacoco.xmlReportPaths>${jacoco.outdir}/jacoco.xml</sonar.coverage.jacoco.xmlReportPaths>
        <sonar.coverage.exclusions>
            ${jacoco.exclude.1},
            ${jacoco.exclude.2},
            ${jacoco.exclude.3},
            ${jacoco.exclude.4},
            ${jacoco.exclude.5}
        </sonar.coverage.exclusions>

    </properties>

    <dependencies>

        <!-- Spring Boot Web -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-webflux</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- Spring Boot Security -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>

        <!-- Spring Boot OAuth 2.0 (JWT) -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-oauth2-resource-server</artifactId>
        </dependency>

        <!-- Spring Boot Validation per Annotation -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>

        <!-- Spring Database -->
        <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-r2dbc</artifactId>
        </dependency>

        <!-- Postgres Database -->
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>r2dbc-postgresql</artifactId>
        </dependency>

        <!-- H2 Database -->
        <dependency>
            <groupId>io.r2dbc</groupId>
            <artifactId>r2dbc-h2</artifactId>
        </dependency>

        <!-- Spring Boot Email -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-mail</artifactId>
        </dependency>

        <!-- Spring Boot Logging - Log4j2 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-log4j2</artifactId>
        </dependency>

        <!-- Spring Boot Logging - JsonTemplateLayout -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-layout-template-json</artifactId>
        </dependency>

        <!-- Asynchronous Logging -->
        <dependency>
            <groupId>com.lmax</groupId>
            <artifactId>disruptor</artifactId>
            <version>${disruptor.version}</version>
        </dependency>

        <!-- Lombok -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Spring Boot Test -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Reactor Test -->
        <dependency>
            <groupId>io.projectreactor</groupId>
            <artifactId>reactor-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Hamcrest -->
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest</artifactId>
            <version>${hamcrest.version}</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>

        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <excludes>
                    <exclude>application-default.yml</exclude>
                </excludes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>application-default.yml</include>
                </includes>
                <targetPath>${project.build.directory}/archive-pack</targetPath>
            </resource>
        </resources>

        <plugins>

            <!-- Resources -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>${maven-resources-plugin.version}</version>
                <executions>
                    <!-- Copy frontend artifact into backend -->
                    <execution>
                        <id>prepare-package</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/classes/static/</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>
                                        ${project.parent.basedir}/frontend/target/classes/static/browser
                                    </directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Compiler -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <!-- Explicitly enable annotation processing to get rid of the message -->
                <!-- and be safe in case future compilers don't enable it by default. -->
                <!-- https://docs.oracle.com/en/java/javase/21/docs/specs/man/javac.html -->
                <configuration>
                    <compilerArgument>-proc:full</compilerArgument>
                </configuration>
            </plugin>

            <!-- Spring Boot -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring-boot-maven-plugin.version}</version>
                <configuration>
                    <!-- Despite being of scope provided, Lombok has to be excluded from the JAR -->
                    <excludes>
                        <exclude>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </exclude>
                    </excludes>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                            <goal>build-info</goal>
                        </goals>
                        <configuration>
                            <additionalProperties>
                                <description>${project.description}</description>
                            </additionalProperties>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Test -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
                <configuration>
                    <argLine>
                        -Xmx2048m
                        -Dfile.encoding=${project.reporting.outputEncoding}
                        ${surefire.jacoco.args}
                    </argLine>
                </configuration>
            </plugin>

            <!-- Jacoco - Code Coverage -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco-maven-plugin.version}</version>
                <configuration>
                    <excludes>
                        <exclude>${jacoco.exclude.1}</exclude>
                        <exclude>${jacoco.exclude.2}</exclude>
                        <exclude>${jacoco.exclude.3}</exclude>
                        <exclude>${jacoco.exclude.4}</exclude>
                        <exclude>${jacoco.exclude.5}</exclude>
                    </excludes>
                    <formats>XML</formats>
                    <destFile>${jacoco.outdir}/jacoco.exec</destFile>
                    <dataFile>${jacoco.outdir}/jacoco.exec</dataFile>
                    <outputDirectory>${jacoco.outdir}</outputDirectory>
                    <propertyName>surefire.jacoco.args</propertyName>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-agent</goal>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Create and deploy archive -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <configuration>
                    <skip>false</skip>
                </configuration>
            </plugin>

        </plugins>

    </build>

</project>
